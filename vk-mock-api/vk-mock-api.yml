openapi: 3.0.0
info:
  title: VK Mock API
  description: Моковая реализация части VK API
  version: 1.0.0

paths:
  /method/messages.send:
    post:
      summary: Отправка сообщения
      operationId: send_message
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                peer_id:
                  type: integer
                  example: 123456789
                  description: Идентификатор собеседника
                message:
                  type: string
                  example: "Привет!"
                  description: Текст отправляемого сообщения
                random_id:
                  type: string
                  example: "abc123"
                  description: Уникальный идентификатор сообщения
              required:
                - peer_id
                - random_id
      responses:
        '200':
          description: Успешная отправка
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: integer
                    example: 5
                    description: Идентификатор отправленного сообщения
        '400':
          description: Ошибка запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Неавторизован
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      security:
        - bearerAuth: []
  /method/messages.getHistory:
    get:
      summary: Получить историю сообщений с пользователя
      parameters:
        - name: peer_id
          in: query
          required: true
          schema:
            type: integer
        - name: start_message_id
          in: query
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Успешный ответ с историей сообщений
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      count:
                        type: integer
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            date:
                              type: integer
                            peer_id:
                              type: integer
                            from_id:
                              type: integer
                            message:
                              type: string
                            out:
                              type: integer
                            attachments:
                              type: array
                              items:
                                type: object
                              nullable: true
                            text:
                              type: string
                              nullable: true
              example:
                response:
                  count: 2
                  items:
                    - id: 21053
                      date: 1669900000
                      peer_id: 123456788
                      from_id: 123456789
                      message: "Здравствуйте! Мы получили ваше резюме."
                      out: 1
                      attachments: []
                    - id: 21054
                      date: 1670000000
                      peer_id: 123456789
                      from_id: 123456788
                      text: "Здравствуйте, подскажите статус моего резюме?"
                      out: 0
                      attachments: []
      security:
        - bearerAuth: []
  /method/users.get:
    get:
      summary: Получить информацию о пользователе по его ID или никнейму
      parameters:
        - name: user_ids
          in: query
          required: true
          schema:
            type: string
          example: "nickname"
          description: ID пользователя или никнейм

      responses:
        '200':
          description: Успешный ответ с данными пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        first_name:
                          type: string
                        last_name:
                          type: string
                        is_closed:
                          type: boolean
                        can_access_closed:
                          type: boolean
              example:
                response:
                  - id: 123456789
                    first_name: "Иван"
                    last_name: "Иванов"
                    is_closed: true
                    can_access_closed: false
      security:
        - bearerAuth: []
        
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
